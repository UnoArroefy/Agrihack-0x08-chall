from Crypto.Util.number import *

c1 = 105223443268587645793277834193603550835443384399834137980824017447008517217021087314221707311472488997855199330647780919081826470903424
c2 = 736336018123263483133376857510134274940066702286727462993474367542696814551026385057165777984621404746880707745851240857097808471269
c3 = -40068190894132724556794037371637145999445447656435039831064550280313135895433289557449031257141905690309789558477130469828602253455411188090564612864762469702879694679123958712446679357306336636274120938533165493635022883620127583878133407758107392573200421647125921247994159809187851070079777849051363844009188205670828338572104845

# Euclidean algorithm
def gcd(a, b):
    if a == 0:
        return b
    return gcd(b % a, a)

# Extended euclidean algorithm
def egcd(a, b):
    if a == 0:
        return b, 0, 1
    gcd, x1, y1 = egcd(b % a, a)
    x = y1 - (b//a) * x1
    y = x1
    return gcd, x, y

# First part 
m1 = gcd(c1-23,c2)

# Second part
x = egcd(c1,c2)[1]
y = egcd(c1,c2)[2]
m2 = c3 // (x*y)

print(long_to_bytes(m1) + long_to_bytes(m2))
